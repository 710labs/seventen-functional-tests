name: List - CA - Dev - Smoke Test
on: workflow_dispatch
jobs:
  smoke-test-dev-ca:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      ENV: dev-ca thelist-dev.710labs.com
      ENV_ID: dev-ca
      EXECUTION_TYPE: ${{ github.event_name == 'workflow_dispatch' && 'Manual Run' || 'Scheduled Run' }}
      ADMIN_USER: ${{ secrets.ADMIN_USER }}
      ADMIN_PW: ${{ secrets.ADMIN_PW }}
      API_KEY: ${{ secrets.API_KEY }}
      BASE_URL: ${{ secrets.BASE_URL_DEV }}
      QA_ENDPOINT: ${{ secrets.QA_ENDPOINT }}
      BYPASS_TAX_CALC: true
      NEXT_VERSION: true
      SLACK_BOT_USER_OAUTH_TOKEN: ${{ secrets.PW_TESTS_SLACKBOT_TOKEN}}
      S3_BUCKET: ${{ secrets.S3_BUCKET}}
      S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY}}
      S3_SECRET: ${{ secrets.S3_SECRET}}
      S3_REGION: ${{ secrets.S3_REGION}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 'node'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright
        run: npx playwright install --with-deps
      #
      # Run your smoke tests and capture the Order ID from the log
      - name: Run Playwright smoke tests & capture OrderID
        id: smoke
        run: |
          echo "üîç Running smoke tests‚Ä¶"
          # Run tests, save all output (stdout+stderr) to a file, but don't fail the step yet
          npm run smoke:test:dev:ca > smoke_output.log 2>&1 || true
          # Echo the log so you can see it in Actions UI
          cat smoke_output.log

          # Look for the first occurrence of "OrderID=12345"
          ORDER_ID=$(grep -oE 'OrderID=[0-9]+' smoke_output.log | head -1 | cut -d'=' -f2)

          if [ -n "$ORDER_ID" ]; then
            echo "‚úÖ Found OrderID=$ORDER_ID"
            # Expose it as this step's output
            echo "orderID=$ORDER_ID" >> $GITHUB_OUTPUT
          else
            echo "‚ö†Ô∏è  No OrderID found in smoke_output.log."
          fi
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: playwright-report/
      #
      # Finally, cancel that order via WooCommerce REST API
      - name: Cancel test order via WooCommerce API
        if: ${{ always() && steps.smoke.outputs.orderID != '' }}
        env:
          WC_CONSUMER_KEY: ${{ secrets.WOO_DEV_KEY }}
          WC_CONSUMER_SECRET: ${{ secrets.WOO_DEV_SECRET }}
        run: |
          echo "üõ†  Cancelling order ${{ steps.smoke.outputs.orderID }}‚Ä¶"
          curl -X PUT "${{ env.BASE_URL }}/wp-json/wc/v3/orders/${{ steps.smoke.outputs.orderID }}" \
            -u "${WC_CONSUMER_KEY}:${WC_CONSUMER_SECRET}" \
            -H "Content-Type: application/json" \
            -d '{"status":"cancelled"}'
