name: Artillery Socket.IO Load Test
on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'Url'
        required: true
        options:
          - https://thelist-dev.710labs.com
          - https://thelist-stage.710labs.com
          - https://thelist-mi.710labs.com
          - https://thelist-co.710labs.com
          - https://thelist.710labs.com
      env:
        type: choice
        description: 'Environment'
        required: true
        options:
          - dev
          - stage
          - prod
      mode:
        type: choice
        description: 'Mode'
        required: true
        options:
          - ca
          - co
          - mi
      virtual_users:
        description: 'Virtual Users'
        required: false
        default: '1'
      duration:
        description: 'Duration (seconds)'
        required: true
        default: '300'
jobs:
  artillery:
    runs-on: ubuntu-latest
    environment: 'gdfsgfd'

    permissions:
      contents: read # needed so that checkout of repository can happen
      id-token: write # additionally needed now for OIDC

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables based on inputs
        run: |
          echo "ARTILLERY_TARGET=${{ github.event.inputs.target }}" >> $GITHUB_ENV
          echo "ARTILLERY_ENV=${{ github.event.inputs.env }}" >> $GITHUB_ENV
          echo "ARTILLERY_VIRTUAL_USERS=${{ github.event.inputs.virtual_users || '1' }}" >> $GITHUB_ENV
          echo "ARTILLERY_DURATION=${{ github.event.inputs.duration || '300' }}" >> $GITHUB_ENV
          echo "ARTILLERY_REPORT_APIKEY=${{ secrets.ARTILLERY_REPORT_APIKEY }}" >> $GITHUB_ENV
          echo "ARTILLERY_710_MODE=${{ github.event.inputs.mode }}" >> $GITHUB_ENV

      - name: Strip quotes from environment variables
        run: |
          ARTILLERY_TARGET=$(echo $ARTILLERY_TARGET | sed 's/"//g')
          ARTILLERY_VIRTUAL_USERS=$(echo $ARTILLERY_VIRTUAL_USERS | sed 's/"//g')
          ARTILLERY_DURATION=$(echo $ARTILLERY_DURATION | sed 's/"//g')
          echo "ARTILLERY_TARGET=$ARTILLERY_TARGET" >> $GITHUB_ENV
          echo "ARTILLERY_VIRTUAL_USERS=$ARTILLERY_VIRTUAL_USERS" >> $GITHUB_ENV
          echo "ARTILLERY_DURATION=$ARTILLERY_DURATION" >> $GITHUB_ENV

      - name: Execute load tests on AWS (us-east-1 region)
        uses: artilleryio/action-cli@v1
        with:
          command: run-fargate --region us-east-1 --count 1 artillery/artillery-${{ github.event.inputs.mode }}-single-phase.yml --record --key ${{ secrets.ARTILLERY_REPORT_APIKEY }} --overrides "{"config":{"phases":[{"duration":${{ github.event.inputs.duration }},"arrivalRate":1,"maxVusers":${{ github.event.inputs.virtual_users }}]}}" --tags "name:1 VU | 60 seconds | https://thelist-dev.710labs.com"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ARTILLERY_TARGET: ${{ github.event.inputs.target }}
          ARTILLERY_VIRTUAL_USERS: ${{ github.event.inputs.virtual_users }}
          ARTILLERY_DURATION: ${{ github.event.inputs.duration }}
          ARTILLERY_710_MODE: ${{ github.event.inputs.mode }}

      - name: Set current date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: artillery-report
          path: artillery-reports/$NOW-artillery-report.json

      - name: Notify about failures
        if: failure()
        uses: 8398a7/action-slack@v3.15.1
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,eventName,job,took,pullRequest
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Slack notifications
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always() # Pick up events even if the job fails or is canceled.
